# -*- coding: utf-8 -*-
"""analyze_interface

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Zv1Zh8Rw4myLoyylQ3hGhDg_G8nUfb9O
"""

import pandas as pd

# Function to calculate the difference in ASA (Accessible Surface Area)
def calculate_diff(a_line, ac_line):
    a_asa = float(a_line.split()[-2])  # ASA value for individual molecule
    ac_asa = float(ac_line.split()[-2])  # ASA value in complex
    diff = a_asa - ac_asa  # Difference indicates interface exposure
    return diff, a_asa, ac_asa

# Function to write identified interface residues into a file
def write_interface_data(file, line, a_asa, diff):
    file.write(f"{line[:27]} {a_asa}  {diff:>8.2f}\n")

# Function to calculate total interface area from an ASA file
def calculate_total_area(file_path):
    total_area = 0.0
    with open(file_path, "r") as f:
        for line in f.readlines():
            asa_value = float(line.split()[-1])  # Extract ASA value
            total_area += asa_value
    return total_area

# Function to extract unique interface residues from ASA file
def extract_residues(file_path):
    residues = []
    with open(file_path, "r") as f:
        for line in f.readlines():
            residues.append(line.strip()[22:26])  # Extract residue number
    return set(residues)  # Return unique residues

# Function to process protein interface atoms
def process_protein_interface():
    protein_atoms = 0
    with open("/content/5AOR_A.asa", "r") as a, open("/content/5AOR_A_C_complx.asa", "r") as ac, open("/content/5AOR_A.int", "w") as a_int:
        for lineac in ac.readlines():
            a.seek(0, 0)  # Reset file pointer
            for linea in a.readlines():
                linea = linea.strip()
                lineac = lineac.strip()
                if linea[:27] == lineac[:27]:  # Match atom details
                    diff, a_asa, _ = calculate_diff(linea, lineac)
                    if diff > 0.01:  # Only consider significant ASA differences
                        protein_atoms += 1
                        write_interface_data(a_int, linea, a_asa, diff)
    return protein_atoms

# Function to process RNA interface atoms
def process_rna_interface():
    rna_atoms = 0
    with open("/content/5AOR_A_C_complx.asa", "r") as ac, open("/content/5AOR_C.asa", "r") as c, open("/content/5AOR_C.int", "w") as c_int:
        for lineac in ac.readlines():
            c.seek(0, 0)  # Reset file pointer
            for linec in c.readlines():
                linec = linec.strip()
                lineac = lineac.strip()
                if linec[:27] == lineac[:27]:  # Match atom details
                    diff, _, c_asa = calculate_diff(linec, lineac)
                    if diff > 0.01:  # Only consider significant ASA differences
                        rna_atoms += 1
                        write_interface_data(c_int, linec, c_asa, diff)
    return rna_atoms

# Process and count interface atoms
protein_atoms_at_interface = process_protein_interface()
rna_atoms_at_interface = process_rna_interface()

# Calculate total interface area
total_area_a = calculate_total_area("/content/5AOR_A.int")
total_area_c = calculate_total_area("/content/5AOR_C.int")

# Extract unique interface residues
residues_protein = extract_residues("/content/5AOR_A.int")
residues_rna = extract_residues("/content/5AOR_C.int")

# Display results
print(" (a) Total number of interface atoms")
print(f"Total Interface Atoms - Protein: {protein_atoms_at_interface}")
print(f"Total Interface Atoms - RNA: {rna_atoms_at_interface}")
print(f"Total Interface Atoms - Complex: {protein_atoms_at_interface + rna_atoms_at_interface}")
print("\n")

print("(b) Total number of interface residues (Protein) & nucleotides (RNA)")
print(f"Total Interface Residues - Protein: {len(residues_protein)}")
print(f"Total Interface Nucleotides - RNA: {len(residues_rna)}")
print(f"Total Interface Residues and Nucleotides - Complex: {len(residues_protein | residues_rna)}")
print("\n")

print(" (c) Total Interface Area")
print(f"Total Interface Area - Protein: {total_area_a:.2f} Å²")
print(f"Total Interface Area - RNA: {total_area_c:.2f} Å²")
print(f"Total Interface Area - Complex: {total_area_a + total_area_c:.2f} Å²")
print(f"Unique Interface Residues for PyMol Visualization")
print(f"Unique Interface Residues Protein {residues_protein}")
print(f"Unique Interface Residues RNA: {residues_rna}")